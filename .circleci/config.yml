version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: pack python folder
          command: |
            zip metaupload.zip metaupload.py
            mkdir /tmp/resources
            mv playbooks/aws_role/policy.json /tmp/resources
            mv metaupload.zip /tmp/resources
      - persist_to_workspace:
          root: /tmp/resources
          paths:
            - policy.json
            - metaupload.zip

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/resources
      - run:
          name: install dependencies
          command: |
            sudo pip install -r requirements.txt
      - run:
          name: deploy
          command: |
            opera deploy demo demo_use_case.yml

  test:
    docker:
      - image: circleci/python:3.7.2
    environment:
      DATA_PROJ: '{"file": "none", "repository_url": "https://github.com/AlexSpart/use-case-radon-demo.git", "servicetemplate_location": "ctt/test_config.yml"}'
      DATA_ARTI: '{"projectId": 1}'
      DATA_DEP: '{"testartifactId": 1}'
      DATA_EXE: '{"deploymentId": 1}'
      TEST_FILE: "/home/circleci/project/ctt/test-app.zip"
      
      GMT_DOCKER_COMPOSE_URL: "https://github.com/radon-h2020/radon-gmt/blob/project/radon/docker-compose.yml"
      GMT_HTTP_PORT: "18080"
      PARTICLES_URL: "https://github.com/radon-h2020/radon-particles.git"
      PARTICLES_BRANCH: "master"
      PARTICLES_DIR: "/tmp/radon-particles"
      CTT_DOCKER_NAME: "RadonCTT"
      CTT_SERVER_DOCKER: "radonconsortium/radon-ctt"
      CTT_VOLUME: "/tmp/RadonCTT"
      CTT_PORT: "18080"
      CTT_EXT_PORT: "7999"
      CTT_ENDPOINT: "http://localhost:${CTT_PORT}/RadonCTT"
      CTT_RESULT_FILE: "/tmp/result.zip"
      SOCKSHOP_DEMO_URL: "https://github.com/AlexSpart/use-case-radon-demo.git"
      SOCKSHOP_DEMO_BRANCH: "circleci-project-setup"
      SOCKSHOP_DEMO_DIR: "/tmp/demo-ctt-sockshop"
      SUT_CSAR_FN: "sut.csar"
      SUT_CSAR: "/tmp/${SUT_CSAR_FN}"
      TI_CSAR_FN: "ti.csar"
      TI_CSAR: "/tmp/${TI_CSAR_FN}"
     
      NAME: "CTT-master"
      CTT_SERVER_DOCKER_TAG: "latest"
      SUT_EXPORT_URL: "http://127.0.0.1:${GMT_HTTP_PORT}/winery/servicetemplates/radon.blueprints/SockShopTestingExample/?yaml&csar"
      SUT_DEPLOYMENT_PORT: "80"
      SUT_DEPLOYMENT_URL: "http://localhost:${SUT_DEPLOYMENT_PORT}"
      TI_EXPORT_URL: "http://127.0.0.1:${GMT_HTTP_PORT}/winery/servicetemplates/radon.blueprints.testing/JMeterMasterOnly/?yaml&csar"
      TI_DEPLOYMENT_PORT: "5000"
      TI_DEPLOYMENT_URL: "http://localhost:${TI_DEPLOYMENT_PORT}"
      
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo pip3 install awscli
      - run:
          name: start test environment
          command: |
            docker run --name "${CTT_DOCKER_NAME}" -d -p "127.0.0.1:${CTT_EXT_PORT}:${CTT_PORT}" -v /var/run/docker.sock:/var/run/docker.sock -v "${CTT_VOLUME}:/tmp/RadonCTT" "${CTT_SERVER_DOCKER}:${CTT_SERVER_DOCKER_TAG}"

          background: true
      - run:
          name: create project
          command: |
           export CTT_PROJECT_UUID=$(./curl_uuid.sh \"http://localhost:18080/RadonCTT/project\" \"{\\\"name\\\":\\\"SockShop\\\",\\\"repository_url\\\":\\\"https://github.com/AlexSpart/use-case-radon-demo.git\\\"}\")
           echo $CTT_PROJECT_UUID

      - run:
          name: create testartifact
          command: |
            echo "ok 2"
      - run:
          name: create deployment
          command: |
            echo "ok 3"
      - run:
          name: execute test
          command: |
            echo "ok 4"
      - store_artifacts:
          path: /tmp/RadonCTT/projects/1/results

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - test:
          requires:
            - deploy
