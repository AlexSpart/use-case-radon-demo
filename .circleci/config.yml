version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: pack python folder
          command: |
            zip metaupload.zip metaupload.py
            mkdir /tmp/resources
            mv playbooks/aws_role/policy.json /tmp/resources
            mv metaupload.zip /tmp/resources
      - persist_to_workspace:
          root: /tmp/resources
          paths:
            - policy.json
            - metaupload.zip

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/resources
      - run:
          name: install dependencies
          command: |
            sudo pip install -r requirements.txt
      - run:
          name: deploy
          command: |
            opera deploy demo demo_use_case.yml

  test:
    docker:
      - image: circleci/python:3.7.2
    environment:
      DATA_PROJ: '{"file": "", "repository_url": "https://github.com/UST-CTT/radon-ctt-sockshop-example.git", "servicetemplate_location": "ctt/test_config.yml"}'
      DATA_ARTI: '{"projectId": 1}'
      DATA_DEP: '{"projectId": 1}'
      DATA_EXE: '{"deploymentId": 1}'
      TEST_FILE: '$CIRCLE_WORKING_DIRECTORY/ctt/test-app.zip'
    steps:
      - checkout 
      # - run:
      #     name: Keyscan Github (HACK)
      #     command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: install dependencies
          command: |
            sudo pip3 install awscli
            cd ctt
            zip test-app.zip hello.py
      - run:
          name: start test environment
          command: |
            git clone https://github.com/radon-h2020/radon-ctt.git
            cd radon-ctt
            docker build -t ctt .
            docker run -p 8080:8080 -d ctt
      - run:
          name: create project
          command: |
            curl -H  "Content-Type: application/json" -d $DATA_PROJ http://localhost:8080/RadonCTT/ui/projects
      - run:
          name: create testartifact
          command: |
            curl -H  "Content-Type: application/json" -d $DATA_ARTI http://localhost:8080/RadonCTT/ui/testartifacts
      - run:
          name: create deployment
          command: |
            curl -H  "Content-Type: application/json" -d $DATA_DEP http://localhost:8080/RadonCTT/ui/deployments
      - run:
          name: execute test
          command: |
            curl -H  "Content-Type: application/json" -d $DATA_EXE http://localhost:8080/RadonCTT/ui/executors
      - store_test_results:
          path: /tmp/RadonCTT/projects/1/results

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - test:
          requires:
            - deploy